# This is a basic workflow to help you get started with Actions
name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "newfeatures" ]
  pull_request:
    branches: [ "master", "newfeatures" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. Configura o Android SDK para compilar e rodar os testes
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33 # Pode ajustar conforme necessário
          build-tools-version: 33.0.2
          ndk: '21.4.7075529' # Se seu projeto precisar do NDK, ajuste, caso contrário, pode remover

      # 4. Concede permissões de execução ao Gradle Wrapper
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      # 5. Faz o build do projeto e roda os testes unitários
      - name: Build and Test
        run: ./gradlew build
